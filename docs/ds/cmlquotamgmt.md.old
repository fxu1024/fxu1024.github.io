---
layout: default
title: CML Quota Management Testing
nav_order: 18
parent: Operations
grand_parent: Data Service
---

# CML Quota Management Testing
{: .no_toc }

- TOC
{:toc}

---

## 1. Introduction to the test environment

|CDP Runtime version |CDP PvC Base 7.1.7 SP2|
|CM version |Cloudera Manager 7.11.3.2|
|ECS version |CDP PvC DataServices 1.5.2|
|OS version |Centos 7.9|
|K8S version |RKE 1.25.14|
|Whether to enable Kerberos |Yes|
|Whether to enable TLS |Yes|
|Auto-TLS |Yes|
|Kerberos |FreeIPA|
|LDAP |FreeIPA|
|DB Configuration |Embedded|
|Vault |Embedded|
|Docker registry |Embedded|
|Install Method |Internet|

## 2. Basic Concept

- Quota management enables you to control how resources are allocated within your CML workspace.
    - `Object Quota`: Each user can only run 50 Pods in parallel (sessions, jobs, Spark drivers+executors, etc). You can set the OVERRIDE_PODQUOTA environment variable in the project to override the default value.
    - `User level Quota`: CML administrators can enable user level quota under Site Administration Page. By default, 8 GiB memory and 2 vCPU cores are configured for each user. The custom quota can override the default quota for the dedicated user.
    - `Namespace level Quota`(new feature starting from 1.5.2): Pools are organized in a hierarchical manner by defining nodes in the hierarchy with resource limits, which can then be subdivided as needed to allocate resources for a new namespace. CML has two types of namespace: Infra namespace and User namespace. 1 CML workspace has one infra namespace and many user namespaces. Use namespace is created dynamically when any workload is run (like session, job etc) based on infra namespace name with suffixes of -user-<userid>. This means that each user has its own working namespace.

- Tags provide a way to add user-defined name/value pairs as metadata for the resource pools. You must define tag `'key: experience, value: cml'`, this helps CML to identify the resource pool is configured for CML.

- CML reserves 30 GB Memory and 20 CPU for the CML workspace installation. The minimum namespace level quota for a CML workspace is 38 GB of Memory and 22 CPU.

- The new quota management cannot be enabled for an existing workspace. you will need to delete the existing workspace, enable the quota management feature, and then rebuild the workspace.


## 3. Know more about resource pools 

- Navigate to Cloduera Management Console > Resource Utilization > Quotas, you can see four-level resource pools: root ->  root.default -> root.default.ecstest-c51569f2 -> root.default.ecstest-c51569f2.monitoring-namespace.

![](../../assets/images/ds/cdwquota02.png)

- You can query the backend database for more details.

```bash
kubectl exec -it cdp-embedded-db-0 -n cdp -- bash
psql -P pager=off -d db-resourcepoolmanager

db-resourcepoolmanager=# select path,metadata from pools order by created_at;
```

- There are five built-in pools post DS environment initiation. 
    - Note: The top resource pool is root which have unrestricted access to all resources available within your cluster.
    - Note: quota_cpu=2000 means 2 CPU cores, quota_memory=1000000000 means 1GB memory.

|No.|PATH|quota_cpu|quota_memory|validity|distribution|order|queueing|clusterId|namespace|
|1|root|null|null|null|ELASTIC|FIFO|false|||
|2|root.default|1000000000000000000|1000000000000000000|-1|ELASTIC|UNSET|false|||
|3|root.default.observability|2000|1000000000|-1|ELASTIC|FIFO|false||observability|
|4|root.default.ecstest-c51569f2|4000|30000000000|-1|ELASTIC|FIFO|true|liftie-8wqkf202||
|5|root.default.ecstest-c51569f2.monitoring-namespace|4000|30000000000|-1|ELASTIC|FIFO|true|liftie-8wqkf202|ecstest-c51569f2-monitoring-platform|

- Add three new pools for Data Service workloads. 
    - Note: please keep advanced properties no changed. 

|No.|PATH|quota_cores|quota_memory|validity|distribution|order|queueing|clusterId|namespace|
|1|root.default.high|48|200GB||ELASTIC|FIFO|true|||
|2|root.default.medium|24|100GB||ELASTIC|FIFO|true|||
|3|root.default.low|12|50GB||ELASTIC|FIFO|true|||

![](../../assets/images/ds/cdwquota03.png)

![](../../assets/images/ds/cdwquota04.png)

![](../../assets/images/ds/cdwquota05.png)


## 4. Test quotas in CML

- Please add tag 'key: experience, value: cml' for pool `root.default.medium`. This is a mandatory requirement of CML.

![](../../assets/images/ds/cmlquota01.png)

- Please edit the CML control plane deployment `dp-mlx-control-plane-app` and set environment variable `ENABLE_UMBRA_INTEGRATION` to `true`.

```bash
$ kubectl describe deploy dp-mlx-control-plane-app -n cdp|grep ENABLE_UMBRA_INTEGRATION
      ENABLE_UMBRA_INTEGRATION:                            false
```

![](../../assets/images/ds/cmlquota02.png)

- Wait for the new pod to come up.

![](../../assets/images/ds/cmlquota03.png)

- Provisioning workspace is the same as it was before quota management. There are some extra configurations for configuring the quota for specified workspace. 

![](../../assets/images/ds/cmlquota04.png)

- Resource pool 'root.default' is optional but not available. When you select the valid resource pool `root.default.medium`, its default quota is 0. Therefore, you need to pull the slider to a reasonable value as needed.

![](../../assets/images/ds/cmlquota05.png)

- Turn back to the resource pool UI. the resource pool `root.default.medium` has two new pools after provisioning workspace `cml01`.

![](../../assets/images/ds/cmlquota06.png)

|No.|PATH|quota_cores|quota_memory|validity|distribution|order|queueing|preemption enabled|preemption fencing|priority enabled|priority fencing|tags|clusterId|namespace|
|1|root.default.medium|24|100GB|NEVER EXPIRES|ELASTIC|FIFO|true|true|true|true|true|createdby:cml|||
|2|root.default.medium.cml01.cml01|20|30GB|NEVER EXPIRES|ELASTIC|FIFO|true|false|false|false|false|createdby:cml|liftie-8wqkf202|cml01|

- Log in to CML as user `admin` and check the user quota under Site Administration Page. 
    - Note: It's enabled by default after you have enabled the namespace level quota management.
    - Note: Do not toggle off this default quota once you have enabled the quota management in cml.
    - Note: Do not edit the gpu resources on the user quota tab under site administration when the workspace is provisioned without any gpu resources gpu resources. We can edit the gpu resources if the workspace is provisioned with gpu resources.

![](../../assets/images/ds/cmlquota08.png)

- Turn back to the resource pool UI. A new pool 'root.default.medium.cml01.user-1' for user namespace is added.
    - Note: Although the session container is using 2 cores and 4GB memory, we see that the quota of the user namespace is 2 cores and 8GB memory, indicating that it follows the user level quota specification.

![](../../assets/images/ds/cmlquota07.png)

|No.|PATH|quota_cores|quota_memory|validity|distribution|order|queueing|preemption enabled|preemption fencing|priority enabled|priority fencing|tags|clusterId|namespace|
|3|root.default.medium.cml01.user-1|2|8GB|NEVER EXPIRES|INELASTIC|FIFO|true|true|true|false|false|createdby:cml|liftie-8wqkf202|cml01-user-1|

- Let's define a custom user quota ( 12 cores and 24GB memory ) for user `cml01`.

![](../../assets/images/ds/cmlquota12.png)

- Log in to CML as user `cml01` and start a session `session 1`.

![](../../assets/images/ds/cmlquota14.png)

- Turn back to the resource pool UI. A new pool 'root.default.medium.cml01.user-2' for user namespace is added.
    - Note: Although the session container is using 2 cores and 4GB memory, we see that the quota of the user namespace is 12 cores and 24GB memory, indicating that it follows the user level quota specification.

![](../../assets/images/ds/cmlquota11.png)

|4|root.default.medium.cml01.user-2|12|24GB|NEVER EXPIRES|INELASTIC|FIFO|true|true|true|false|false|createdby:cml|liftie-8wqkf202|cml01-user-2|

- Let's define a new custom user quota ( 13 cores and 24GB memory ) for user `admin`.



- Let's stop all existing sessions and launch a new session  for user `admin`.



- The pool 'root.default.medium.cml01.user-2' has updated it's quota to `12 cores and 24GB memory`.

![](../../assets/images/ds/cmlquota13.png)

- Let's start another session `session 2` for user `cml01`.



![](../../assets/images/ds/cmlquota09.png)

![](../../assets/images/ds/cmlquota10.png)


